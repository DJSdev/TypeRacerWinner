import requests
import base64
import json


class Vision:
    """
    Keyword Arguments:
    api_key -- is the Google Vision API key needed to perform text analyze using the Google Vision API

    An instance of Vision allows users to specify an image url and return the text found inside the image using the finish_challenge() function
    """

    def __init__(self, api_key:str):
        self.api_key = api_key

    def _build_json_payload(self, image_url: str):
        '''
        Builds a JSON payload for sending to the Google Vision API.

        Keyword Arguments:
        image_url   -- A URI that points to an image on the internet - https://www.google.com/picture.jpg
        '''
        image = requests.get(image_url).content
        request_list = []
        content_json_obj = {
            'content': base64.b64encode(image).decode('UTF-8')
        }
        feature_json_obj = []
        feature_json_obj.append({
            'type': "TEXT_DETECTION",
            'maxResults': 1,
        })
        request_list.append({
            'features': feature_json_obj,
            'image': content_json_obj,
        })
        return json.dumps({'requests': request_list})


    def _google_vision_analyze(self, json_payload: str, api_key: str):
        '''
        google_vision_analyze(json, api_key) -> dict

        Keyword Arguments:
        json    -- is the result of json.dumps() 
        api_key -- is the Google Vision API key needed to perform text analyze using the Google Vision API

        The json payload generated by build_json_payload() function is sent off to google to analyze the text in the picture
        '''
        reponse = requests.post(url=f"https://vision.googleapis.com/v1/images:annotate?key={api_key}", data=json_payload, headers={'Content-Type': 'application/json'})
        return json.loads(reponse.text)

    def _get_challenge_text(self, response_from_google: dict):
        '''
        get_challenge_text(response_from_google) -> string

        Keyword Arguments:
        response_from_google -- is dictionary from the google_vision_analyze() function. This is the response from the Google Vision API request

        The dictionary needs drilled into to pull the challenge text out of it
        '''
        return response_from_google['responses'][0]['textAnnotations'][0]['description']

    def finish_challenge(self, url):
        '''
        finish_challenge(url) -> string

        Keyword Arguments:
        url -- A URI that points to an image on the internet - https://www.google.com/picture.jpg

        Returns a string of text from a picture after analyzing it with the Google Vision API
        '''
        image_file = self._build_json_payload(url)
        result = self._google_vision_analyze(image_file, self.api_key)
        return self._get_challenge_text(result)

if __name__ == "__main__":
    gv = Vision("Google_Vision_API_Key")
    print(gv.finish_challenge("https://d1w7fb2mkkr3kw.cloudfront.net/assets/images/book/lrg/9781/4437/9781443752237.jpg"))